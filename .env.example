# ===================================
# DOCKER SETUP - INCLUDED SERVICES
# ===================================
# For `docker-compose up` with PostgreSQL and Qdrant containers
# Copy to .env and configure your values

# Core Application
NODE_ENV=production
PAYLOAD_SECRET=your_long_random_secret_here_min_32_chars
PAYLOAD_URL=http://localhost:3000
NEXT_PUBLIC_PAYLOAD_URL=http://localhost:3000

# Docker Database (uses container name as hostname)
DATABASE_URI=postgres://knowledge_user:your_password@postgres:5432/knowledge_base
DB_PASSWORD=your_password

# AI Services (Optional but recommended)
OPENAI_API_KEY=sk-your-openai-key-here
GEMINI_API_KEY=your-gemini-key-here
MISTRAL_API_KEY=your-mistral-key-here
PDF_EXTRACTOR=mistral

# AI Model Configuration
# WARNING: Only change models within the same provider to avoid API compatibility issues
# Gemini Flash model for OCR, metadata generation, and chat
GEMINI_FLASH_MODEL=gemini-flash-latest
# Imagen model for AI-generated cover photos
GEMINI_IMAGEN_MODEL=imagen-4.0-fast-generate-001
# Mistral OCR model for document processing
MISTRAL_OCR_MODEL=mistral-ocr-latest
# OpenAI embedding model for vector search
# CRITICAL: Changing this will invalidate all existing embeddings in Qdrant!
# Only change if you plan to re-embed all documents with sync:qdrant
OPENAI_EMBEDDING_MODEL=text-embedding-3-large

# Docker Vector Database (uses container name as hostname)
QDRANT_ENABLED=true
QDRANT_URL=http://qdrant:6333
QDRANT_API_KEY=  # Leave empty for local Docker Qdrant (no auth needed)

# ============================================
# EXTERNAL QDRANT SOURCES (OPTIONAL)
# ============================================
# Add external Qdrant collections as searchable sources in the chatbot.
# Configured as a JSON array of source objects.
#
# CRITICAL REQUIREMENT: External collections MUST use text-embedding-3-large (3072 dimensions)
# to match the internal collection's embedding model. Incompatible models cannot be searched together.
#
# Required fields per source:
#   - id: Unique identifier (alphanumeric, no spaces)
#   - collection: Qdrant collection name
#   - label: Display name in UI
#   - qdrantUrl: Full Qdrant URL (e.g., https://qdrant.example.com:6333)
#   - qdrantApiKey: API key for authentication
#   - mapping: Field mappings for extracting data from Qdrant payload
#     - url: Path to URL field (e.g., "metadata.source_url")
#     - title: Path to title field (e.g., "metadata.title")
#     - content: Path to content field (e.g., "content")
#
# Optional fields:
#   - urlBase: Base URL to prepend to relative URLs
#   - icon: Emoji or icon for UI (e.g., "üîí", "üåê")
#   - color: Badge color ("blue", "green", "red", "purple", "yellow")
#   - enabled: Set to false to temporarily disable (default: true)
#   - mapping.description: Path to description field
#   - mapping.updatedAt: Path to timestamp field
#
# Example (minified - use online JSON minifier):
# EXTERNAL_QDRANT_SOURCES='[{"id":"example","collection":"ExampleCollection","label":"Example Source","qdrantUrl":"https://qdrant.example.com:6333","qdrantApiKey":"your-key","urlBase":"https://example.com","mapping":{"url":"metadata.url","title":"metadata.title","content":"content"},"icon":"üìö","color":"blue"}]'

# Example (pretty-printed for readability - MINIFY before use):
# EXTERNAL_QDRANT_SOURCES='
# [
#   {
#     "id": "intranet",
#     "collection": "IntranetDocs_RAG",
#     "label": "Intranet",
#     "qdrantUrl": "https://qdrant.example.com:6333",
#     "qdrantApiKey": "your-api-key-here",
#     "urlBase": "https://intranet.example.com",
#     "mapping": {
#       "url": "metadata.source_url",
#       "title": "metadata.title",
#       "content": "content"
#     },
#     "icon": "üîí",
#     "color": "blue"
#   },
#   {
#     "id": "public",
#     "collection": "PublicWebsite_RAG",
#     "label": "Public Website",
#     "qdrantUrl": "https://qdrant.example.com:6333",
#     "qdrantApiKey": "your-api-key-here",
#     "urlBase": "https://www.example.com",
#     "mapping": {
#       "url": "metadata.url",
#       "title": "metadata.title",
#       "content": "content"
#     },
#     "icon": "üåê",
#     "color": "green"
#   }
# ]
# '

# Email Provider (Optional - for password reset & verification emails)
# Without email config, emails will be written to console (dev mode)
# Uncomment and configure one of the following providers:

# Resend (Recommended - https://resend.com)
# EMAIL_FROM=noreply@yourdomain.com
# EMAIL_FROM_NAME=Kunskapsportal
# RESEND_API_KEY=re_your_api_key_here

# SMTP (Generic email provider)
# EMAIL_FROM=noreply@yourdomain.com
# EMAIL_FROM_NAME=Kunskapsportal
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your_smtp_username
# SMTP_PASS=your_smtp_password

# Production Settings
NEXT_TELEMETRY_DISABLED=1
NODE_OPTIONS="--max-old-space-size=2048"